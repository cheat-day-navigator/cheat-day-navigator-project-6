{"version":3,"sources":["globalComponents/firebase.js","localComponents/apiData.js","globalComponents/makeCall.js","localComponents/inputForm.js","localComponents/DropdownLinks.js","localComponents/loadingModal.js","localComponents/ItemCardDetails.js","localComponents/Dropdown.js","localComponents/Header.js","localComponents/detailedNutritionCard.js","localComponents/foodSearchPage.js","localComponents/foodSearch.js","localComponents/NutritionCard.js","localComponents/Footer.js","localComponents/CompareCard.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","APIData","appKey","MakeCall","searchtype","arguments","length","undefined","appQuery","appKeyGrab","appIdGrab","urlType","parameters","query","detailed","ntx_item_id","console","log","axios","method","url","dataResponse","headers","x-app-id","x-app-key","params","then","response","data","catch","error","warning","Swal","fire","title","text","type","confirmButtonText","InputForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyPress","e","which","handleClick","handleChange","event","setState","userInput","target","value","clearForm","document","getElementById","reset","preventDefault","props","loading","database","ref","push","state","result","queryResult","common","toggleCard","setTimeout","react_default","a","createElement","id","htmlFor","placeholder","onChange","onKeyDown","showSecondInput","className","onClick","Component","DropdownLinks","links","map","item","react_router_dom","to","concat","tag_id","food_name","LoadingModal","ItemCardDetails","nutrientValues","attr_id","nutrients","dataLoaded","_this2","extractNutrients","macroNutrients","_this3","_loop","i","nutrientId","macroNutrient","find","usda_nutr_desc","unit","_this4","itemNutrients","forEach","nutrient","itemNutrient","full_nutrients","description","table","loadingModal","src","photo","thumb","alt","tag_name","serving_qty","serving_unit","toFixed","Dropdown","openCompare","compareOpen","bind","assertThisInitialized","handleOutsideClick","listOpen","on","comparedItems","val","key","removeEventListener","addEventListener","prevState","node","contains","onCompareClick","savedItems","react_router","path","render","localComponents_DropdownLinks","Header","href","localComponents_Dropdown","callback","callbackHell","compareList","DetailedCards","Fragment","lib","showThumbs","swipeable","useKeyboardArrows","commonData","thisValues","n","handleSaveItem","data-id","generateFirebaseId","checkDuplicates","addToCompare","readMoreToggle","ResultsPaginator","SimpleCards","foodSearchPage","NutritionCard","retrieveFirebase","itemList","name","firebaseId","indexOf","index","retrieveCompareList","position","dbRef","remove","dataset","nutrientValuesSimple","currVal","processInfo","newVals","newVals2","foodSearch","detailedNutritionCard","Footer","rel","CompareCard","newList","element","App","registerSavedItemsListener","showCompareResult","showCompare","nutritionVisible","callBackData","d","nutriData","showNutritionCard","loadHandler","s","callBackFirebase","dropdownItems","newState","localComponents_Header","inputForm","selectedItem","match","tagID","localComponents_ItemCardDetails","assign","localComponents_NutritionCard","brandedData","branded","localComponents_CompareCard","localComponents_Footer","Boolean","window","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7527bcf6.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCKqCQ2bnxrqZ267e6kBbkitweRVisybKA\",\n    authDomain: \"superfoods-navigator-project-6.firebaseapp.com\",\n    databaseURL: \"https://superfoods-navigator-project-6.firebaseio.com\",\n    projectId: \"superfoods-navigator-project-6\",\n    storageBucket: \"superfoods-navigator-project-6.appspot.com\",\n    messagingSenderId: \"72580584215\",\n    appId: \"1:72580584215:web:f2caafd0f0ae81e1\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","const APIData = {\n  appKey: \"aca04b0312df7f5382fe783ade15b363\",\n  appId: \"b3b57eaf\"\n}\n\nexport default APIData","import axios from 'axios'\nimport APIData from '../localComponents/apiData'\nimport Swal from 'sweetalert2'\n\n// A global, multipurpose axios function that can handle multiple different kinds of API calls\n\nconst MakeCall = (searchtype = `simpleSearch`, appQuery = `chicken nuggets`) => {\n  const appKeyGrab = APIData.appKey // grab local key (will remove on build)\n  const appIdGrab = APIData.appId // grab local id (will remove on build)\n  let urlType = '' // Determining what kind of API call to do\n  let methodType = `GET` // Defaulting API method to GET\n  let parameters = {} // Determining which params (if applicable) to add to API call\n\n\n// creating a variable for sweet alert\n  const warningFire = (warning) => {\n    Swal.fire({\n      title: 'Oops!',\n      text: warning,\n      type: 'error',\n      confirmButtonText: 'Okay'\n    })\n  }\n\n\n  if (searchtype === `macroNutrients`) { // Macronutrient call\n    urlType = `https://trackapi.nutritionix.com/v2/utils/nutrients`\n\n  } else if (searchtype === `simpleSearch`) { // Regular food search\n    urlType = `https://trackapi.nutritionix.com/v2/search/instant`\n    parameters = {\n      'query': appQuery,\n      'detailed': true\n    }\n\n  } else if (searchtype === `readMore`) { // Information call for specific food result. ONLY BRANDS HAVE A NTX_ITEM_ID\n    urlType = 'https://trackapi.nutritionix.com/v2/search/item'\n    parameters = {\n      'ntx_item_id': appQuery\n    }\n  } else {\n    console.log(`Invalid or missing searchtype prop. Make sure your first prop when using MakeCall() is either 'macroNutrients', 'simpleSearch', or 'readMore'!`)\n  }\n\n  // axios call to the API using the API key and ID\n  return (\n    axios({\n      method: methodType,\n      url: urlType,\n      dataResponse: `json`,\n      headers: {\n        'x-app-id': appIdGrab,\n        'x-app-key': appKeyGrab\n      },\n      params: parameters\n    }).then(response => {\n      return response.data\n    }).catch(error => {  // If nothing matched, something went wrong on your end!\n      console.log(error)\n      warningFire(`Something went wrong on our end! Please wait a moment, and try your search again!`)\n    })\n  )\n}\n\n\nexport default MakeCall","import React, { Component } from 'react'\nimport Swal from 'sweetalert2'\nimport firebase from \"./../globalComponents/firebase\"\nimport MakeCall from \"./../globalComponents/makeCall\"\n\nclass InputForm extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      data: {},\n      userInput: ''\n    }\n  }\n  // creating an empty string where user input will go\n\n  handleKeyPress = (e) => {\n    if (e.which === 13) {\n      this.handleClick(e)\n    }\n    // using e.which to see whick key was pressed\n  }\n\n  // Binding the user's input to create controlled information\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value,\n    })\n  }\n\n  clearForm = () => {\n    document.getElementById('main-form').reset();\n  }\n  // resetting the form\n\n  // Create an event listener for user input\n  handleClick = (event) => {\n    event.preventDefault();\n    this.props.loading(true)\n    const dbRef = firebase.database().ref(\"searchresults/\");\n    dbRef.push(this.state.userInput)\n    // using firebase to push user input entered\n    MakeCall('simpleSearch', this.state.userInput).then(result => {\n      let queryResult = result\n      if (queryResult.common.length > 0) {\n        this.setState({ data: queryResult }, () => {\n          this.props.toggleCard();\n        })\n        // making the API call and setting objects with user input\n        this.props.data(queryResult)\n      } else {\n        this.clearForm();\n        this.props.loading(false)\n        return Swal.fire({\n          title: 'Oops!',\n          text: `We can't find that food! Try something else!`,\n          type: 'error',\n          confirmButtonText: 'Okay'\n        })\n      }\n    }).then(() => {\n      setTimeout(() => {\n        this.props.loading(false)\n      }, 3000)\n    })\n  }\n\n  \n\n  render() {\n    return (\n      // main form that will handle our user input\n      <form id=\"main-form\">\n        <label htmlFor=\"search\">Look up your favourite foods and find the nutrient information!</label>\n        <input type=\"text\" id=\"search\" placeholder=\"e.g. Chicken nuggets\" onChange={this.handleChange} onKeyDown={this.handleKeyPress} />\n        {this.state.showSecondInput ? <input type=\"text\" id=\"compare\" placeholder=\"e.g. \n        Pork chops\" onChange={this.handleChange} onKeyDown={this.handleKeyPress} /> : null  }\n        <div className=\"buttons\">\n          <button type=\"submit\" onClick={this.handleClick}>Submit</button>\n        </div>\n      </form >\n    )\n  }\n}\n\nexport default InputForm","import React from 'react';\nimport {Link} from 'react-router-dom';\n// import ItemCardDetails from './ItemCardDetails';\n\n// creating a function that will bring in the food name and tag id when clicked\nconst DropdownLinks = (props) => {\n    return(\n        <ul>\n            {props.links && props.links.map((item) => {\n                return(\n                    <li onClick={props.handleClick}><Link to ={`/${item.tag_id}`}>{item.food_name}</Link></li>\n                )\n            })}\n        </ul>\n    \n    )\n}\n    \n\nexport default DropdownLinks","import React from 'react'\nimport '../styles/loading.css'\n\nconst LoadingModal = () => {\n  return (\n    <div className=\"modal-loading\">\n      <div className=\"container-loading\">\n        <div className=\"bars-loading\">\n          <div className=\"bar-loading bar1-loading\"></div>\n          <div className=\"bar-loading bar2-loading\"></div>\n          <div className=\"bar-loading bar3-loading\"></div>\n          <div className=\"bar-loading bar4-loading\"></div>\n          <div className=\"bar-loading bar5-loading\"></div>\n          <div className=\"bar-loading bar6-loading\"></div>\n          <div className=\"bar-loading bar7-loading\"></div>\n          <div className=\"bar-loading bar8-loading\"></div>\n          <div className=\"bar-loading bar9-loading\"></div>\n          <div className=\"bar-loading bar10-loading\"></div>\n          <div className=\"bar-loading bar11-loading\"></div>\n          <div className=\"bar-loading bar12-loading\"></div>\n          <div className=\"bar-loading bar13-loading\"></div>\n          <div className=\"bar-loading bar14-loading\"></div>\n          <div className=\"bar-loading bar15-loading\"></div>\n        </div>\n        <p className=\"text-loading\">Loading <span className=\"dot-loading dot1-loading\">. </span><span\n          className=\"dot-loading dot2-loading\">. </span><span className=\"dot-loading dot3-loading\">.\n        </span>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoadingModal","import React, { Component } from 'react';\n// import {Link} from 'react-router-dom';\nimport MakeCall from './../globalComponents/makeCall'\nimport LoadingModal from './loadingModal'\nimport Swal from 'sweetalert2'\n\nclass ItemCardDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nutrientValues: [\n                { attr_id: 208 }, // calories\n                { attr_id: 204 }, // fats\n                { attr_id: 205 }, // carbs\n                { attr_id: 269 }, // sugars\n                { attr_id: 318 }, // vitA\n                { attr_id: 324 }, // vitD\n                { attr_id: 415 }, // vitB6\n                { attr_id: 401 }, // vitC\n                { attr_id: 323 }, // vitE\n                { attr_id: 304 }, // magnesium\n                { attr_id: 309 }, // zinc\n                { attr_id: 303 } // iron\n            ],\n            loading: false,\n            nutrients: [],\n            dataLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            loading: true\n        })\n        // making the API call to extract the macroNutrients\n        MakeCall('macroNutrients').then((response) => {\n            let nutrients = this.extractNutrients(response)\n            console.log('data loaded', nutrients)\n            this.setState({\n                nutrients,\n                loading: false,\n                dataLoaded: true\n            })\n        }).catch(error => {\n            console.log(error)\n            this.setState({\n                loading: false\n            })\n            // if there is an error the loading screen will continue\n            return Swal.fire({\n                title: 'Uh oh!',\n                text: `Something happened on our end! Please try reloading!`,\n                type: 'error',\n                confirmButtonText: 'Okay'\n            })\n        })\n        // error handling with sweet alerts is user input is incorrect\n\n\n\n    }\n\n    extractNutrients(macroNutrients) {\n        let nutrients = []\n        // creating an empty array to set state with\n        console.log('macronutrientS', macroNutrients)\n        for (let i = 0; i < this.state.nutrientValues.length; i++) {\n            let nutrientId = this.state.nutrientValues[i].attr_id;\n            console.log(nutrientId, 'nutrient id')\n            // looping over nutrients values and grabbing the attribute ID\n            let macroNutrient = macroNutrients.find((item) => item.attr_id === nutrientId)\n            // finding each item and seeing if attribute ID matches nutrient ID\n            console.log('macronutrient', macroNutrient)\n            nutrients.push({\n                attr_id: macroNutrient.attr_id,\n                usda_nutr_desc: macroNutrient.usda_nutr_desc,\n                unit: macroNutrient.unit\n            })\n            // pusing the values to see the empty array\n        }\n        return nutrients\n    }\n\n    render() {\n        if (this.state.dataLoaded === false) {\n            console.log('no data rendering empty')\n            return null\n        }\n        const itemNutrients = [];\n        this.state.nutrients.forEach((nutrient) => {\n            let itemNutrient = this.props.item.full_nutrients.find((item) => {\n                if (item.attr_id === nutrient.attr_id) {\n                    return true\n                } else {\n                    return false\n                }\n            })\n            if (itemNutrient) {\n                itemNutrients.push({\n                    value: itemNutrient.value,\n                    unit: nutrient.unit,\n                    description: nutrient.usda_nutr_desc\n                })\n            }\n        })\n        console.table(itemNutrients)\n        return (\n            <div className=\"show-selected\">\n                {this.state.loading === true ?\n                    <LoadingModal />\n                    : null}\n                <div className=\"card-info\">\n                    <div className=\"item-info\">\n                        <img src={this.props.item && this.props.item.photo.thumb} alt=\"\" />\n                        <div className=\"nutrition-card\">\n                            <h2>{this.props.item && this.props.item.tag_name}</h2>\n                            <h3>Nutrition Facts</h3>\n                            <p className=\"line\">{this.props.item && this.props.item.serving_qty} {this.props.item && this.props.item.serving_unit}</p>\n                            <ul>\n                                {itemNutrients.map((nutrient) => {\n                                    return (\n                                        <li><p>{nutrient.description}</p><p>{nutrient.value.toFixed(2)} {nutrient.unit}</p></li>\n                                    )\n                                }\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\n\nexport default ItemCardDetails","import React, { Component } from 'react';\nimport firebase from './../globalComponents/firebase.js';\nimport {\n    // BrowserRouter as Router,\n    Route,\n    // Link,\n    // NavLink\n} from 'react-router-dom';\nimport DropdownLinks from \"./DropdownLinks.js\";\nimport ItemCardDetails from \"./ItemCardDetails.js\"\n\n\nclass Dropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n\n        this.state = {\n            listOpen: false,\n            compareOpen: false,\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        const compareRef = firebase.database().ref('comparedItems/');\n        // creating a compare variable to send to firebase\n        compareRef.on('value', (response) => {\n            const comparedItems = [];\n            // setting an empty array for the compared items to update state\n            const data = response.val();\n            // getting the value of the response paramater\n\n            for (let key in data) {\n                comparedItems.push(data[key])\n            }\n            // pushing the compared items to the array along with a key identifer\n\n            this.setState({\n                comparedItems\n            })\n\n            // setting state with the compared items\n\n        });\n    }\n\n    handleClick() {\n        if (!this.state.listOpen) {\n            // attach/remove event handler\n            document.addEventListener('click', this.handleOutsideClick, false);\n        } else {\n            document.removeEventListener('click', this.handleOutsideClick, false);\n        }\n\n        this.setState(prevState => ({\n            listOpen: !prevState.listOpen,\n        }))\n    }\n\n    handleOutsideClick(e) {\n        // ignore clicks on the component itself\n        if (this.node.contains(e.target)) {\n            return;\n        }\n        this.handleClick();\n    }\n\n    openCompare = () => {\n        this.setState({\n            compareOpen: !this.state.compareOpen\n        })\n    }\n\n    render() {\n        return (\n            <div ref={node => { this.node = node; }}>\n                <ul className=\"menu\" >\n                    <li><button className=\"compare-btn btn\" onClick={this.openCompare}>Compare List</button><div className=\"counter\"><p>{this.state.comparedItems && this.state.comparedItems.length}</p></div></li>\n                    {this.state.compareOpen ?\n                        <ul className=\"drop-down compared-items\">\n                            {this.state.comparedItems.map((item) => {\n                                return (\n                                    <li>{item.tag_name}</li>\n                                )\n                            })}\n                            <li><button onClick={this.props.onCompareClick} className=\"compare-btn2\">Compare!</button></li>\n                        </ul> : null}\n                    <li><button className=\"save-btn btn\" onClick={this.handleClick}>Saved Items</button><div className=\"counter\"><p>{this.props.savedItems && this.props.savedItems.length}</p></div></li>\n                    {this.state.listOpen ?\n                        <ul className=\"drop-down saved-items\">\n                            <Route path=\"/\" render={() => { return (<DropdownLinks links={this.props.savedItems} handleClick={this.handleClick} />) }} />\n                        </ul>\n                        : null}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Dropdown;","import React from 'react';\nimport Dropdown from './Dropdown.js';\n\nconst Header = (props) => {\n\n    const callback = (e) => {\n        props.callbackHell(e)\n    }\n\n    return (\n        <header>\n            <nav>\n                <h4><a href=\"\">Superfood Navigation</a></h4>\n                <Dropdown\n                    callback={callback}\n                    onCompareClick={props.onCompareClick}\n                    compareList={props.compareList}\n                    savedItems={props.savedItems}\n                />\n            </nav>\n            <div className=\"title-container\">\n                <h1>Superfood Navigation</h1>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react'\nimport { Carousel } from 'react-responsive-carousel';\nimport \"./../styles/carousel.css\";\n\n// creating a simple component that will render all the nutrition information\nconst DetailedCards = (props) => {\n  if (props.detailed) {\n    return (\n      <React.Fragment>\n        <Carousel showThumbs={false} className=\"carousel-results\" swipeable={false} useKeyboardArrows>\n          {props.commonData && props.commonData.map((common, i) => {\n            let thisValues = props.nutrientValues.map((n) => {\n              let capturedNutrients = common.full_nutrients.find((key) => key.attr_id === n.attr_id)\n              return capturedNutrients\n            })\n            return (\n              <div className=\"carousel-results\">\n                <div className=\"card-info\">\n                  <div className=\"item-card\" key={`${common.tag_id}-${i}`}>\n                    <img src={common.photo.thumb} alt=\"\" />\n                    <div className=\"nutrition-card\">\n                      <h2>{common && common.tag_name}</h2>\n                      <h3>Nutrition Facts</h3>\n                      <p className=\"line\">{common && common.serving_qty} {common && common.serving_unit}</p>\n                      <ul>\n                        {thisValues.map((n, id) => {\n                          if (n === undefined) {\n                            return null\n                          } else {\n                            return (\n                              <li><p>{props.nutrientValues[id].usda_nutr_desc}</p><p>{n.value.toFixed(2)} {props.nutrientValues[id].unit}</p></li>\n                            )\n                          }\n                        }\n                        )}\n                      </ul>\n                    </div>\n                    <button onClick={props.handleSaveItem} className=\"save-item-btn\" id={i} value={common.tag_name} data-id={props.generateFirebaseId(common.tag_name)}>{props.checkDuplicates(common.tag_name) ? 'Unsave Item' : 'Save Item'}</button>\n                    <button className=\"compare-btn\" onClick={props.addToCompare} id={i} value={common.tag_name}>Add to Compare List</button>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </Carousel>\n        <button onClick={props.readMoreToggle}>Fewer details</button>\n      </React.Fragment>\n    )\n  } else { return null }\n}\n\nexport default DetailedCards;","import React from 'react'\n\nconst ResultsPaginator = (props) => {\n  if (props.commonData !== undefined) {\n    return (\n      <div className=\"simple-results\">\n        {props.commonData && props.commonData.map((common, i) => {\n          let thisValues = props.nutrientValues.map((n) => {\n            let capturedNutrients = common.full_nutrients.find((key) => key.attr_id === n.attr_id)\n            return capturedNutrients\n          })\n          return (\n            <div className=\"result-list\" key={`${common.tag_id}-${i}`}>\n              <div className=\"item-header\">\n                <h2>{common && common.tag_name}</h2>\n                <p className=\"line\">{common && common.serving_qty} ({common && common.serving_unit})</p>\n                <div className=\"thumb-container\">\n                  <img src={common.photo.thumb} alt=\"\" />\n                </div>\n              </div>\n              <div className=\"nutrition-card-simple\">\n                <h3>Nutrition Facts</h3>\n                <ul>\n                  {thisValues.map((n, id) => {\n                    if (n === undefined) {\n                      return null\n                    } else {\n                      return (\n                        <li><p>{props.nutrientValues[id].usda_nutr_desc}</p><p>{n.value.toFixed(2)} {props.nutrientValues[id].unit}</p></li>\n                      )\n                    }\n                  }\n                  )}\n                </ul>\n              </div>\n              <div className=\"buttons-searched\">\n                <button onClick={props.handleSaveItem} className=\"save-item-btn\" id={i} value={common.tag_name} data-id={props.generateFirebaseId(common.tag_name)}>{props.checkDuplicates(common.tag_name) ? 'Unsave Item' : 'Save Item'}</button>\n                <button className=\"compare-btn\" onClick={props.addToCompare} id={i} value={common.tag_name}>Add to Compare List</button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  } else { return null }\n}\n\nexport default ResultsPaginator","import React from 'react'\nimport ResultsPaginator from './foodSearchPage'\nimport './../styles/simpleStyles.css'\n\nconst SimpleCards = (props) => {\n  if (!(props.detailed)) {\n    return (\n      <React.Fragment>\n        <ResultsPaginator\n          commonData={props.commonData}\n          nutrientValues={props.nutrientValues}\n          handleSaveItem={props.handleSaveItem}\n          generateFirebaseId={props.generateFirebaseId}\n          checkDuplicates={props.checkDuplicates}\n          addToCompare={props.addToCompare}\n          detailed={props.detailed} />\n        <button onClick={props.readMoreToggle}>More details</button>\n      </React.Fragment>\n    )\n  } else { return null }\n}\n\nexport default SimpleCards;","import React, { Component } from 'react';\nimport firebase from './../globalComponents/firebase'\nimport DetailedCards from './detailedNutritionCard'\nimport SimpleCards from './foodSearch'\n\nclass NutritionCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nutrientValues: [\n        { attr_id: 208 }, // calories\n        { attr_id: 205 }, // carbs\n        { attr_id: 204 }, // fats\n        { attr_id: 203 }, // proteins\n        { attr_id: 307 }, // sodium\n        { attr_id: 269 }, // sugars\n        { attr_id: 301 }, // calcium\n        { attr_id: 318 }, // vitA\n        { attr_id: 415 }, // vitB6\n        { attr_id: 401 }, // vitC\n        { attr_id: 324 }, // vitD\n        { attr_id: 323 }, // vitE\n        { attr_id: 303 }, // iron\n        { attr_id: 304 }, // magnesium\n        { attr_id: 309 } // zinc\n      ],\n      nutrientValuesSimple: [\n        { attr_id: 318 }, // vitA\n        { attr_id: 415 }, // vitB6\n        { attr_id: 401 }, // vitC\n        { attr_id: 324 }, // vitD\n        { attr_id: 323 }, // vitE\n        { attr_id: 303 }, // iron\n        { attr_id: 304 }, // magnesium\n        { attr_id: 309 } // zinc\n      ],\n      itemList: [],\n      compareList: [],\n      detailed: false\n    }\n  }\n\n  componentDidMount() {\n    this.retrieveFirebase();\n    const processInfo = (id) => {\n      return this.props.nutrients.find((i) => i.attr_id === id)\n    }\n    let currVal\n    let newVals = []\n    for (let i = 0; i < this.state.nutrientValues.length; i++) {\n      currVal = processInfo(this.state.nutrientValues[i].attr_id)\n      newVals[i] = { attr_id: currVal.attr_id, usda_nutr_desc: currVal.usda_nutr_desc, unit: currVal.unit }\n    }\n    let newVals2 = []\n    for (let i = 0; i < this.state.nutrientValuesSimple.length; i++) {\n      currVal = processInfo(this.state.nutrientValuesSimple[i].attr_id)\n      newVals2[i] = { attr_id: currVal.attr_id, usda_nutr_desc: currVal.usda_nutr_desc, unit: currVal.unit }\n    }\n    this.setState({\n      nutrientValues: newVals,\n      nutrientValuesSimple: newVals2\n    })\n    this.retrieveCompareList();\n  }\n\n  readMoreToggle = () => {\n    if (this.state.detailed === true) {\n      this.setState({\n        detailed: false\n      })\n    } else {\n      this.setState({\n        detailed: true\n      })\n    }\n  }\n\n// creating a function that will retreive our saved items in firebase\n  retrieveFirebase = () => {\n    const dbRef = firebase.database().ref('savedItems/');\n    dbRef.on('value', (response) => {\n      const itemList = [];\n      const data = response.val();\n      // creating an empty array to update state with\n\n      for (let key in data) {\n        itemList.push({\n          name: data[key].tag_name,\n          firebaseId: key\n        })\n      }\n      // pushing specific key and tag name to the itemList array\n\n      this.setState({\n        itemList\n      })\n    })\n  }\n\n  // creating a function that will check the index of each item name\n  checkDuplicates = (item) => {\n    const simpleArr = this.state.itemList.map(item => {\n      return item.name\n    })\n\n    if (simpleArr.indexOf(item) > -1) {\n      return true\n    }\n  }\n\n// creating a function to check the firebase ID and the index of each item\n  generateFirebaseId = (item) => {\n    const simpleArr = this.state.itemList.map(item => {\n      return item.name\n    })\n\n    const index = simpleArr.indexOf(item)\n\n    if (index > -1) {\n      return this.state.itemList[index].firebaseId\n    }\n  }\n\n  retrieveCompareList = () => {\n    const dbRef = firebase.database().ref('comparedItems/');\n    dbRef.on('value', (response) => {\n      const compareList = [];\n      const data = response.val();\n      // creating a empty array to set state with using the compared items\n\n      // pushing specific key of compared data to new array\n      for (let key in data) {\n        compareList.push({\n          data: data[key]\n        })\n      }\n\n      this.setState({\n        compareList\n      })\n    })\n  }\n\n  addToCompare = (e) => {\n    e.preventDefault();\n    const position = e.target.id\n    // creating a variable to access the id of compared item\n    const dbRef = firebase.database().ref(`comparedItems/`)\n    if (this.state.compareList.length < 2) {\n      dbRef.push(this.props.commonData[position]);\n    } else {\n      dbRef.remove();\n      dbRef.push(this.props.commonData[position]);\n    }\n\n  }\n\n  handleSaveItem = (e) => {\n    e.preventDefault();\n    const position = e.target.id;\n    const item = e.target.value;\n\n    // creating variables to access the value and id of saved items\n\n    const isDuplicate = this.checkDuplicates(item)\n\n    // undefined is false-y but it's not actually a boolean \n    if (!isDuplicate) {\n      const dbRef = firebase.database().ref('savedItems/');\n      dbRef.push(this.props.commonData[position]);\n    } else {\n      const itemRef = firebase.database().ref(`savedItems/${[e.target.dataset.id]}`)\n      itemRef.remove();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"gallery-field\">\n        <div className=\"wrapper\">\n          <SimpleCards\n            commonData={this.props.commonData}\n            nutrientValues={this.state.nutrientValuesSimple}\n            handleSaveItem={this.handleSaveItem}\n            generateFirebaseId={this.generateFirebaseId}\n            checkDuplicates={this.checkDuplicates}\n            addToCompare={this.addToCompare}\n            readMoreToggle={this.readMoreToggle}\n            detailed={this.state.detailed}\n          />\n          <DetailedCards\n            commonData={this.props.commonData}\n            nutrientValues={this.state.nutrientValues}\n            handleSaveItem={this.handleSaveItem}\n            generateFirebaseId={this.generateFirebaseId}\n            checkDuplicates={this.checkDuplicates}\n            addToCompare={this.addToCompare}\n            readMoreToggle={this.readMoreToggle}\n            detailed={this.state.detailed}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default NutritionCard;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Made by <a target=\"_blank\" href=\"http://indercodes.com\" rel=\"noopener noreferrer\">Inder</a>, <a target=\"_blank\" href=\"https://chitracodes.com/\" rel=\"noopener noreferrer\">Chitra</a>, <a target=\"_blank\" href=\"http://lintbox.com\" rel=\"noopener noreferrer\">Paul</a>, and <a target=\"_blank\" href=\"http://katbosnic.com\" rel=\"noopener noreferrer\">Kat</a> using the <a target=\"_blank\" href=\"https://developer.nutritionix.com/\" rel=\"noopener noreferrer\">Nutrionix API</a></p>\n        </footer >\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\n\nclass CompareCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nutrientValues: [\n                { attr_id: 208 }, // calories\n                { attr_id: 204 }, // fats\n                { attr_id: 205 }, // carbs\n                { attr_id: 269 }, // sugars\n                { attr_id: 318 }, // vitA\n                { attr_id: 324 }, // vitD\n                { attr_id: 415 }, // vitB6\n                { attr_id: 401 }, // vitC\n                { attr_id: 323 }, // vitE\n                { attr_id: 304 }, // magnesium\n                { attr_id: 309 }, // zinc\n                { attr_id: 303 } // iron\n            ],\n            newList: []\n        }\n    }\n\n    componentDidMount() {\n        // creating an empty array with variable newList\n        const newList = []\n        const compareList = this.props.compareList\n\n        // pushing each argument to the array with specific value\n        compareList.forEach(function (element) {\n            newList.push(element)\n        })\n\n        // setting state with the new array\n        this.setState({\n            newList\n        })\n\n        // using the props to find a specific id for each nutrient\n        const processInfo = (id) => {\n            return this.props.nutrients.find((i) => i.attr_id === id)\n        }\n        let currVal\n        let newVals = []\n        // looping over the nutrtient values and pushing it to the new array\n        for (let i = 0; i < this.state.nutrientValues.length; i++) {\n            currVal = processInfo(this.state.nutrientValues[i].attr_id)\n            newVals[i] = { attr_id: currVal.attr_id, usda_nutr_desc: currVal.usda_nutr_desc, unit: currVal.unit }\n        }\n        this.setState({\n            nutrientValues: newVals\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"compare-container\">\n                {this.state.newList && this.state.newList.map((element, i) => {\n                    let thisValues = this.state.nutrientValues.map((n, id) => {\n                        let capturedNutrients = element.data.full_nutrients.find((key) => key.attr_id === n.attr_id)\n                        return capturedNutrients\n                        // mapping over the newList array and capturing the specific key for that nutrient\n                    })\n                    return (\n                        <div>\n                            {/* displaying the values on the page with nutrition information */}\n                            <div className=\"nutrition-card\">\n                                <h2>{element && element.data.tag_name}</h2>\n                                <h3>Nutrition Facts</h3>\n                                <p className=\"line\">{element && element.data.serving_qty} {element && element.data.serving_unit}</p>\n                                <ul>\n                                    {thisValues.map((n, id) => {\n                                        if (n === undefined) {\n                                            return null\n                                        } else {\n                                            return (\n                                                <li><p>{this.state.nutrientValues[id].usda_nutr_desc}</p><p>{n.value.toFixed(2)} {this.state.nutrientValues[id].unit}</p></li>\n                                            )\n                                        }\n                                    }\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default CompareCard;","import React, { Component } from 'react'\nimport './styles/App.css'\nimport InputForm from './localComponents/inputForm'\nimport Header from './localComponents/Header'\nimport NutritionCard from './localComponents/NutritionCard'\nimport Footer from './localComponents/Footer'\nimport MakeCall from './globalComponents/makeCall'\nimport LoadingModal from './localComponents/loadingModal'\nimport Swal from 'sweetalert2'\nimport ItemCardDetails from './localComponents/ItemCardDetails'\nimport CompareCard from './localComponents/CompareCard'\nimport firebase from 'firebase'\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    // Create an empty initial state;\n    this.state = {\n      nutriData: {},\n      userInput: '',\n      nutritionVisible: false,\n      macroNutrients: {},\n      loading: false,\n      dropdownItems: [],\n      showCompare: false,\n      compareList: [],\n      savedItems: []\n    }\n  }\n\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    })\n    MakeCall('macroNutrients').then((response) => {\n      let newState = response\n      this.setState({\n        macroNutrients: newState\n      })\n    }).then(() => {\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        })\n      }, 1000)\n    }).catch(error => {\n      console.log(error)\n      this.setState({\n        loading: false\n      })\n      return Swal.fire({\n        title: 'Uh oh!',\n        text: `Something happened on our end! Please try reloading!`,\n        type: 'error',\n        confirmButtonText: 'Okay'\n      })\n    })\n\n    const dbRef = firebase.database().ref('comparedItems/');\n    dbRef.on('value', (response) => {\n      const compareList = [];\n      const data = response.val();\n\n      for (let key in data) {\n        compareList.push({\n          data: data[key]\n        })\n      }\n\n      this.setState({\n        compareList\n      })\n    })\n    this.registerSavedItemsListener();\n  }\n\n  // creates ref to firebase and listens for value changes to the saved items node\n  registerSavedItemsListener = () => {\n    const dbRef = firebase.database().ref('savedItems/');\n    dbRef.on('value', (response) => {\n      console.log('got saved Items value', response)\n      const savedItems = [];\n      const data = response.val();\n\n      for (let key in data) {\n        savedItems.push(data[key])\n      }\n\n      this.setState({\n        savedItems\n      })\n    });\n  }\n\n  showCompareResult = () => {\n    this.setState({\n      showCompare: true,\n      nutritionVisible: false\n    })\n  }\n\n  callBackData = (d) => {\n    this.setState({ nutriData: d })\n  }\n\n  showNutritionCard = () => {\n    this.setState({\n      nutritionVisible: true\n    })\n  }\n\n  loadHandler = (s) => {\n    this.setState({\n      loading: s\n    })\n  }\n\n  callBackFirebase = (e) => {\n    this.setState({\n      dropdownItems: e\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {this.state.loading === true ?\n            <LoadingModal />\n            : null}\n          {/* {console.log(this.state.macroNutrients)} */}\n          <Header\n            onCompareClick={this.showCompareResult}\n            savedItems={this.state.savedItems}\n          />\n          <main className=\"wrapper\">\n            <InputForm\n              data={this.callBackData}\n              toggleCard={this.showNutritionCard}\n              value={this.state.userInput}\n              loading={this.loadHandler}\n            />\n            <Route path=\"/:tagID\" render={(props) => {\n              console.log('details', this.state.savedItems)\n              const selectedItem = this.state.savedItems.find((key) => key.tag_id === props.match.params.tagID)\n              console.log('selected item', selectedItem)\n              return (\n                selectedItem ? <ItemCardDetails\n                  {...props}\n                  item={selectedItem}\n                /> : null)\n            }} />\n          </main>\n          {this.state.nutritionVisible ? <NutritionCard\n            commonData={this.state.nutriData.common}\n            brandedData={this.state.nutriData.branded}\n            value={this.state.userInput}\n            nutrients={this.state.macroNutrients}\n          /> : null}\n          {this.state.showCompare ?\n            <CompareCard\n              compareList={this.state.compareList}\n              nutrients={this.state.macroNutrients}\n            /> : null\n          }\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}